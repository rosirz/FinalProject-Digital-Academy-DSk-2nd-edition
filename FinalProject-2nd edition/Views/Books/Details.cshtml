@using Microsoft.AspNetCore.Authorization
@inject IAuthorizationService AuthorizationService
@model FinalProject_2nd_edition.Models.BookViewModel

@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>

<div>
    <h4>Book</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Name)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Name)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Description)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Description)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Genre)
        </dt>
        <dd class="col-sm-10">
            
            <a asp-controller="Genres" asp-action="Details" asp-route-id=@Model.Genre.GenreId>"@Model.Genre.Name"</a>
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Author)
        </dt>
        <dd class="col-sm-10">
            <a asp-controller="Authors" asp-action="Details" asp-route-id=@Model.Author.AuthorId>"@Model.Author.Name"</a>
        </dd>
    </dl>
</div>
<div>
    @if ((await AuthorizationService.AuthorizeAsync(User, "RequireAdministratorRole")).Succeeded)
    {
        <a asp-action="Edit" asp-route-id="@Model.BookId">Edit</a>
    }
    <a asp-action="Index">Back to List</a>
</div>
